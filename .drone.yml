kind: pipeline
name: build

platform:
  os: linux
  arch: amd64

steps:
- name: get_tags
  image: alpine/git
  commands:
  - git fetch --tags

- name: build
  image: python:3.7.4-alpine3.10
  commands:
  - apk add --no-cache git
  - pip3 install poetry
  - poetry config settings.virtualenvs.create false
  - poetry install
  - python3 main.py

- name: publish
  image: alpine:3.10
  environment:
    GITHUB_TOKEN:
      from_secret: github_token
    SSH_KEY:
      from_secret: ssh_key
    SSH_KEY_MODULE:
      from_secret: ssh_key_module
    SSH_KNOWN_HOSTS:
      from_secret: ssh_known_hosts
    MODULE_REPO: git@github.com:ViRb3/magisk-frida-module.git
    MODULE_NAME: magisk-frida-module
  commands:
    - >
      [ -f NEW_TAG.txt ] || exit 0
    - apk add --no-cache npm git openssh-client python3 unzip

    - git config --global user.email "drone@drone.io"
    - git config --global user.name "DroneCI"
    - git branch --set-upstream-to=origin/$DRONE_BRANCH
    - git remote set-url origin $DRONE_GIT_SSH_URL

    - eval $(ssh-agent -s)
    - echo "$SSH_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

    - NEW_TAG=$(cat NEW_TAG.txt)
    - npx release-it --ci $NEW_TAG

    - ssh-add -D
    - echo "$SSH_KEY_MODULE" | tr -d '\r' | ssh-add -

    - git clone $MODULE_REPO
    - cd $MODULE_NAME
    - find . ! -name ".git" -maxdepth 1 -exec rm -rf {} + || true
    - unzip -o "../build/*.zip" -d "."
    - git add -A
    - git commit -m "$NEW_TAG"
    - git push
